@use '@/app/styles/vars.scss' as *;

$variants: (
	default: (
		bg-color: $component-bg-color,
		fg-color: $component-fg-color,
		bd-color: #777,
		hover-bd-color: $component-fg-color,
		hover-fg-color: $component-fg-color,
		hover-bg-color: $component-bg-color,
		disabled-bg-color: #151515,
		disabled-fg-color: $component-fg-color,
		disabled-bd-color: #151515,
	),
	primary: (
		bg-color: white,
		fg-color: black,
		bd-color: white,
		hover-bd-color: white,
		hover-fg-color: white,
		hover-bg-color: #333,
		disabled-bg-color: #999,
		disabled-fg-color: black,
		disabled-bd-color: #999,
	),
	error: (
		bg-color: #400,
		fg-color: red,
		bd-color: #900,
		hover-bd-color: red,
		hover-fg-color: red,
		hover-bg-color: #300,
		disabled-bg-color: #300,
		disabled-fg-color: red,
		disabled-bd-color: #300,
	),
	success: (
		bg-color: #020,
		fg-color: #090,
		bd-color: green,
		hover-bd-color: #0b0,
		hover-fg-color: #0b0,
		hover-bg-color: #020,
		disabled-bg-color: #020,
		disabled-fg-color: #0b0,
		disabled-bd-color: #020,
	),
	info: (
		bg-color: #012,
		fg-color: #09b,
		bd-color: #09b,
		hover-bd-color: cyan,
		hover-fg-color: cyan,
		hover-bg-color: #012,
		disabled-bg-color: #012,
		disabled-fg-color: #09b,
		disabled-bd-color: #012,
	),
	warning: (
		bg-color: #220,
		fg-color: #aa0,
		bd-color: #aa0,
		hover-bd-color: yellow,
		hover-fg-color: yellow,
		hover-bg-color: #220,
		disabled-bg-color: #220,
		disabled-fg-color: #bb0,
		disabled-bd-color: #220,
	),
);

$sizes: (
	sm: (
		font-size: 0.75rem,
		padding: 0.25rem 0.5rem,
		border: 1px,
	),
	md: (
		font-size: 1rem,
		padding: 0.25rem 1rem,
		border: 2px,
	),
	lg: (
		font-size: 1.5rem,
		padding: 0.5rem 1rem,
		border: 4px,
	),
);

@mixin variant($variant) {
	$variant-map: map-get($variants, $variant);

	&.#{$variant} {
		background-color: map-get($variant-map, bg-color);
		color: map-get($variant-map, fg-color);
		border-color: map-get($variant-map, bd-color);

		&:hover {
			background-color: map-get($variant-map, hover-bg-color);
			color: map-get($variant-map, hover-fg-color);
			border-color: map-get($variant-map, hover-bd-color);
		}

		&:disabled {
			background-color: map-get($variant-map, disabled-bg-color) !important;
			color: map-get($variant-map, disabled-fg-color) !important;
			border-color: map-get($variant-map, disabled-bd-color) !important;
			cursor: not-allowed;
		}
	}
}

@mixin size($size) {
	$size-map: map-get($sizes, $size);

	&.#{$size} {
		font-size: map-get($size-map, font-size);
		padding: map-get($size-map, padding);
		border-width: map-get($size-map, border);
	}
}

.button {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 0.25rem;
	font-family: inherit;
	cursor: pointer;
	border: solid;

	&:not(:disabled):active {
		scale: 0.95;
	}

	@include variant('default');
	@include variant('primary');
	@include variant('error');
	@include variant('success');
	@include variant('info');
	@include variant('warning');

	@include size('sm');
	@include size('md');
	@include size('lg');

	&.icon {
		padding: 0.25rem;
		aspect-ratio: 1 / 1;
	}
}
